# 0보다 크거나 같고, 99보다 작거나 같은 정수가 주어질 때 다음과 같은 연산을 할 수 있다. 
# 먼저 주어진 수가 10보다 작다면 앞에 0을 붙여 두 자리 수로 만들고, 각 자리의 숫자를 더한다. 
# 그 다음, 주어진 수의 가장 오른쪽 자리 수와 앞에서 구한 합의 가장 오른쪽 자리 수를 이어 붙이면 새로운 수를 만들 수 있다. 
# 다음 예를 보자.
# 26부터 시작한다. 2+6 = 8이다. 새로운 수는 68이다. 6+8 = 14이다. 
# 새로운 수는 84이다. 8+4 = 12이다. 
# 새로운 수는 42이다. 4+2 = 6이다. 새로운 수는 26이다.
# 위의 예는 4번만에 원래 수로 돌아올 수 있다. 따라서 26의 사이클의 길이는 4이다.
# N이 주어졌을 때, N의 사이클의 길이를 구하는 프로그램을 작성하시오.

a = int(input())
b = a
count = 0 #초기 입력값 저장

while True:
    left = a // 10 #각자리의 숫자를 더하기 위한작업(10의자리)
    right = a % 10 #각자리의 숫자를 더하기 위한작업(1의자리)
    sum = left+ right #각 자리를 더해준다.
    
    new = right * 10 + sum % 10 #새로운수 만들기(주어진 수의 오른쪽 자리수(10의자리)와 앞에서 구한 합의 오른쪽자리(1의자리)의 합)
    count += 1 #연산횟수 1 증가(사이클 길이)
    if b == new: #만약 초기 값과 new의 값이 같다면 반복문을 빠져나온다.
        break
    a = new #새로운 수를 a에 대입하여 반복할 수 있게 해준다.
print(count)